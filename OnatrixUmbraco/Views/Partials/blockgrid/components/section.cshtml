@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;


@{
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");

    var spacingTopClass = Model.Content.Value<bool>("addSpaceToTop") ? "padding-t" : "";
    var spacingBottomClass = Model.Content.Value<bool>("addSpaceToBottom") ? "padding-b" : "";

    var sectionBackgroundColor = Model.Content.Value<string>("sectionBackgroundColor") ?? "";
    var sectionBackgroundColorHeight = Model.Content.HasValue("sectionBackgroundColorHeight") ? Model.Content.Value<int>("sectionBackgroundColorHeight") : 100;  
   
    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null;  
    var sectionImageHeight = Model.Content.HasValue("sectionImageHeight") ? Model.Content.Value<int>("sectionImageHeight") : 100; 

    var itemsAlignment = Model.Content.Value<string>("itemsAlignment");
    var alignmentClass = itemsAlignment switch 
    {
        "Top" => "justify-content-start",
        "Center" => "justify-content-center",
        "Bottom" => "justify-content-end",
        _=> "justify-content-center"
    };

    var customHeight = Model.Content.HasValue("sectionHeight") ? Model.Content.Value<int>("sectionHeight") : 100;      
}



<section id="@sectionId" class="section-wrapper @spacingTopClass @spacingBottomClass d-flex flex-column  @alignmentClass" data-height="@customHeight">
    @if (!string.IsNullOrEmpty(sectionBackgroundImage))
    {
        <div class="section-bg-image" data-height="@sectionImageHeight" style="background-image: url(@sectionBackgroundImage)"></div>
    }

    @if(!string.IsNullOrEmpty(sectionBackgroundColor))
    {
        <div class="background-color" data-height="@sectionBackgroundColorHeight" style="background-color: @sectionBackgroundColor;"></div>
    }
    @await Html.GetBlockGridItemAreasHtmlAsync(Model)
</section>