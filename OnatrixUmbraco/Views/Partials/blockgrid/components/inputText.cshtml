@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{

    var inputType = Model.Content.Value<string>("inputType").ToLower();

   

    var uniqueName = Model.Content.Value<string>("uniqueName").ToLower();
    var placeholderText = Model.Content.Value<string>("placeholderText");


    var isRequired = Model.Content.Value<bool>("isRequired");
    var errorMessage = !string.IsNullOrEmpty(Model.Content.Value<string>("errorMessage")) ? Model.Content.Value<string>("errorMessage") : "Field is required";

    var mobileColumns = Model.Content.Value<int>("mobileColumns") > 0 ? Model.Content.Value<int>("mobileColumns") : 12;
    var tabletColumns = Model.Content.Value<int>("tabletColumns") > 0 ? Model.Content.Value<int>("tabletColumns") : 12;
    var laptopColumns = Model.Content.Value<int>("laptopColumns") > 0 ? Model.Content.Value<int>("laptopColumns") : 12;
    var desktopColumns = Model.ColumnSpan;
    var columnClass = $"col-{mobileColumns} col-md-{tabletColumns} col-lg-{laptopColumns} col-xl-{desktopColumns}";

}

<div class="@uniqueName @columnClass">
    <label for="@uniqueName" class="form-label" hidden>Test</label>
    <input type="@inputType" class="form-control" id="@uniqueName" placeholder="@placeholderText" required="@isRequired">

    @if(isRequired) 
    {
        <div class="invalid-feedback">
            @errorMessage
        </div>
    }
    
</div>